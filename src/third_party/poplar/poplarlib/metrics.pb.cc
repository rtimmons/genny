// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metrics.proto

#include "metrics.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_metrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryDouble_metrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryDoubleSlice_metrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryInteger_metrics_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_metrics_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryIntegerSlice_metrics_2eproto;
namespace poplar {
class IntervalSummaryDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<IntervalSummary> _instance;
  const ::poplar::SummaryInteger* number_;
  const ::poplar::SummaryIntegerSlice* number_values_;
  const ::poplar::SummaryDouble* point_;
  const ::poplar::SummaryDoubleSlice* point_values_;
} _IntervalSummary_default_instance_;
class SummaryIntegerSliceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SummaryIntegerSlice> _instance;
} _SummaryIntegerSlice_default_instance_;
class SummaryIntegerDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SummaryInteger> _instance;
} _SummaryInteger_default_instance_;
class SummaryDoubleSliceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SummaryDoubleSlice> _instance;
} _SummaryDoubleSlice_default_instance_;
class SummaryDoubleDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<SummaryDouble> _instance;
} _SummaryDouble_default_instance_;
}  // namespace poplar
static void InitDefaultsscc_info_IntervalSummary_metrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::poplar::_IntervalSummary_default_instance_;
    new (ptr) ::poplar::IntervalSummary();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::poplar::IntervalSummary::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_IntervalSummary_metrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_IntervalSummary_metrics_2eproto}, {
      &scc_info_SummaryInteger_metrics_2eproto.base,
      &scc_info_SummaryIntegerSlice_metrics_2eproto.base,
      &scc_info_SummaryDouble_metrics_2eproto.base,
      &scc_info_SummaryDoubleSlice_metrics_2eproto.base,}};

static void InitDefaultsscc_info_SummaryDouble_metrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::poplar::_SummaryDouble_default_instance_;
    new (ptr) ::poplar::SummaryDouble();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::poplar::SummaryDouble::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryDouble_metrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SummaryDouble_metrics_2eproto}, {}};

static void InitDefaultsscc_info_SummaryDoubleSlice_metrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::poplar::_SummaryDoubleSlice_default_instance_;
    new (ptr) ::poplar::SummaryDoubleSlice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::poplar::SummaryDoubleSlice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryDoubleSlice_metrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SummaryDoubleSlice_metrics_2eproto}, {}};

static void InitDefaultsscc_info_SummaryInteger_metrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::poplar::_SummaryInteger_default_instance_;
    new (ptr) ::poplar::SummaryInteger();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::poplar::SummaryInteger::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryInteger_metrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SummaryInteger_metrics_2eproto}, {}};

static void InitDefaultsscc_info_SummaryIntegerSlice_metrics_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::poplar::_SummaryIntegerSlice_default_instance_;
    new (ptr) ::poplar::SummaryIntegerSlice();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::poplar::SummaryIntegerSlice::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_SummaryIntegerSlice_metrics_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_SummaryIntegerSlice_metrics_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_metrics_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_metrics_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_metrics_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_metrics_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, collector_),
  offsetof(::poplar::IntervalSummaryDefaultTypeInternal, number_),
  offsetof(::poplar::IntervalSummaryDefaultTypeInternal, number_values_),
  offsetof(::poplar::IntervalSummaryDefaultTypeInternal, point_),
  offsetof(::poplar::IntervalSummaryDefaultTypeInternal, point_values_),
  PROTOBUF_FIELD_OFFSET(::poplar::IntervalSummary, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryIntegerSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryIntegerSlice, name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryIntegerSlice, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryInteger, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryInteger, name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryInteger, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDoubleSlice, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDoubleSlice, name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDoubleSlice, value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDouble, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDouble, name_),
  PROTOBUF_FIELD_OFFSET(::poplar::SummaryDouble, value_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::poplar::IntervalSummary)},
  { 11, -1, sizeof(::poplar::SummaryIntegerSlice)},
  { 18, -1, sizeof(::poplar::SummaryInteger)},
  { 25, -1, sizeof(::poplar::SummaryDoubleSlice)},
  { 32, -1, sizeof(::poplar::SummaryDouble)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::poplar::_IntervalSummary_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::poplar::_SummaryIntegerSlice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::poplar::_SummaryInteger_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::poplar::_SummaryDoubleSlice_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::poplar::_SummaryDouble_default_instance_),
};

const char descriptor_table_protodef_metrics_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\rmetrics.proto\022\006poplar\032\014poplar.proto\"\351\001"
  "\n\017IntervalSummary\022\021\n\tcollector\030\001 \001(\t\022(\n\006"
  "number\030\002 \001(\0132\026.poplar.SummaryIntegerH\000\0224"
  "\n\rnumber_values\030\003 \001(\0132\033.poplar.SummaryIn"
  "tegerSliceH\000\022&\n\005point\030\004 \001(\0132\025.poplar.Sum"
  "maryDoubleH\000\0222\n\014point_values\030\005 \001(\0132\032.pop"
  "lar.SummaryDoubleSliceH\000B\007\n\005value\"2\n\023Sum"
  "maryIntegerSlice\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030"
  "\002 \003(\003\"-\n\016SummaryInteger\022\014\n\004name\030\001 \001(\t\022\r\n"
  "\005value\030\002 \001(\003\"1\n\022SummaryDoubleSlice\022\014\n\004na"
  "me\030\001 \001(\t\022\r\n\005value\030\002 \003(\001\",\n\rSummaryDouble"
  "\022\014\n\004name\030\001 \001(\t\022\r\n\005value\030\002 \001(\0012\300\002\n\026Poplar"
  "MetricsCollector\022@\n\017CreateCollector\022\025.po"
  "plar.CreateOptions\032\026.poplar.PoplarRespon"
  "se\022:\n\016CloseCollector\022\020.poplar.PoplarID\032\026"
  ".poplar.PoplarResponse\0227\n\013ResetSample\022\020."
  "poplar.PoplarID\032\026.poplar.PoplarResponse\022"
  "7\n\013FlushSample\022\020.poplar.PoplarID\032\026.popla"
  "r.PoplarResponse\0226\n\003Add\022\027.poplar.Interva"
  "lSummary\032\026.poplar.PoplarResponseB\nZ\010inte"
  "rnalb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_metrics_2eproto_deps[1] = {
  &::descriptor_table_poplar_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_metrics_2eproto_sccs[5] = {
  &scc_info_IntervalSummary_metrics_2eproto.base,
  &scc_info_SummaryDouble_metrics_2eproto.base,
  &scc_info_SummaryDoubleSlice_metrics_2eproto.base,
  &scc_info_SummaryInteger_metrics_2eproto.base,
  &scc_info_SummaryIntegerSlice_metrics_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_metrics_2eproto_once;
static bool descriptor_table_metrics_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_metrics_2eproto = {
  &descriptor_table_metrics_2eproto_initialized, descriptor_table_protodef_metrics_2eproto, "metrics.proto", 812,
  &descriptor_table_metrics_2eproto_once, descriptor_table_metrics_2eproto_sccs, descriptor_table_metrics_2eproto_deps, 5, 1,
  schemas, file_default_instances, TableStruct_metrics_2eproto::offsets,
  file_level_metadata_metrics_2eproto, 5, file_level_enum_descriptors_metrics_2eproto, file_level_service_descriptors_metrics_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_metrics_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_metrics_2eproto), true);
namespace poplar {

// ===================================================================

void IntervalSummary::InitAsDefaultInstance() {
  ::poplar::_IntervalSummary_default_instance_.number_ = const_cast< ::poplar::SummaryInteger*>(
      ::poplar::SummaryInteger::internal_default_instance());
  ::poplar::_IntervalSummary_default_instance_.number_values_ = const_cast< ::poplar::SummaryIntegerSlice*>(
      ::poplar::SummaryIntegerSlice::internal_default_instance());
  ::poplar::_IntervalSummary_default_instance_.point_ = const_cast< ::poplar::SummaryDouble*>(
      ::poplar::SummaryDouble::internal_default_instance());
  ::poplar::_IntervalSummary_default_instance_.point_values_ = const_cast< ::poplar::SummaryDoubleSlice*>(
      ::poplar::SummaryDoubleSlice::internal_default_instance());
}
class IntervalSummary::_Internal {
 public:
  static const ::poplar::SummaryInteger& number(const IntervalSummary* msg);
  static const ::poplar::SummaryIntegerSlice& number_values(const IntervalSummary* msg);
  static const ::poplar::SummaryDouble& point(const IntervalSummary* msg);
  static const ::poplar::SummaryDoubleSlice& point_values(const IntervalSummary* msg);
};

const ::poplar::SummaryInteger&
IntervalSummary::_Internal::number(const IntervalSummary* msg) {
  return *msg->value_.number_;
}
const ::poplar::SummaryIntegerSlice&
IntervalSummary::_Internal::number_values(const IntervalSummary* msg) {
  return *msg->value_.number_values_;
}
const ::poplar::SummaryDouble&
IntervalSummary::_Internal::point(const IntervalSummary* msg) {
  return *msg->value_.point_;
}
const ::poplar::SummaryDoubleSlice&
IntervalSummary::_Internal::point_values(const IntervalSummary* msg) {
  return *msg->value_.point_values_;
}
void IntervalSummary::set_allocated_number(::poplar::SummaryInteger* number) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (number) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      number = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, number, submessage_arena);
    }
    set_has_number();
    value_.number_ = number;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.number)
}
void IntervalSummary::set_allocated_number_values(::poplar::SummaryIntegerSlice* number_values) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (number_values) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      number_values = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, number_values, submessage_arena);
    }
    set_has_number_values();
    value_.number_values_ = number_values;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.number_values)
}
void IntervalSummary::set_allocated_point(::poplar::SummaryDouble* point) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (point) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      point = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, point, submessage_arena);
    }
    set_has_point();
    value_.point_ = point;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.point)
}
void IntervalSummary::set_allocated_point_values(::poplar::SummaryDoubleSlice* point_values) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_value();
  if (point_values) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      point_values = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, point_values, submessage_arena);
    }
    set_has_point_values();
    value_.point_values_ = point_values;
  }
  // @@protoc_insertion_point(field_set_allocated:poplar.IntervalSummary.point_values)
}
IntervalSummary::IntervalSummary()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:poplar.IntervalSummary)
}
IntervalSummary::IntervalSummary(const IntervalSummary& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  collector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_collector().empty()) {
    collector_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collector_);
  }
  clear_has_value();
  switch (from.value_case()) {
    case kNumber: {
      _internal_mutable_number()->::poplar::SummaryInteger::MergeFrom(from._internal_number());
      break;
    }
    case kNumberValues: {
      _internal_mutable_number_values()->::poplar::SummaryIntegerSlice::MergeFrom(from._internal_number_values());
      break;
    }
    case kPoint: {
      _internal_mutable_point()->::poplar::SummaryDouble::MergeFrom(from._internal_point());
      break;
    }
    case kPointValues: {
      _internal_mutable_point_values()->::poplar::SummaryDoubleSlice::MergeFrom(from._internal_point_values());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:poplar.IntervalSummary)
}

void IntervalSummary::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_IntervalSummary_metrics_2eproto.base);
  collector_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_has_value();
}

IntervalSummary::~IntervalSummary() {
  // @@protoc_insertion_point(destructor:poplar.IntervalSummary)
  SharedDtor();
}

void IntervalSummary::SharedDtor() {
  collector_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (has_value()) {
    clear_value();
  }
}

void IntervalSummary::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const IntervalSummary& IntervalSummary::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_IntervalSummary_metrics_2eproto.base);
  return *internal_default_instance();
}


void IntervalSummary::clear_value() {
// @@protoc_insertion_point(one_of_clear_start:poplar.IntervalSummary)
  switch (value_case()) {
    case kNumber: {
      delete value_.number_;
      break;
    }
    case kNumberValues: {
      delete value_.number_values_;
      break;
    }
    case kPoint: {
      delete value_.point_;
      break;
    }
    case kPointValues: {
      delete value_.point_values_;
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = VALUE_NOT_SET;
}


void IntervalSummary::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.IntervalSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  collector_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  clear_value();
  _internal_metadata_.Clear();
}

const char* IntervalSummary::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string collector = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_collector();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "poplar.IntervalSummary.collector"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .poplar.SummaryInteger number = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_number(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .poplar.SummaryIntegerSlice number_values = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_number_values(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .poplar.SummaryDouble point = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_point(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .poplar.SummaryDoubleSlice point_values = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_point_values(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* IntervalSummary::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.IntervalSummary)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string collector = 1;
  if (this->collector().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_collector().data(), static_cast<int>(this->_internal_collector().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.IntervalSummary.collector");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_collector(), target);
  }

  // .poplar.SummaryInteger number = 2;
  if (_internal_has_number()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::number(this), target, stream);
  }

  // .poplar.SummaryIntegerSlice number_values = 3;
  if (_internal_has_number_values()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::number_values(this), target, stream);
  }

  // .poplar.SummaryDouble point = 4;
  if (_internal_has_point()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::point(this), target, stream);
  }

  // .poplar.SummaryDoubleSlice point_values = 5;
  if (_internal_has_point_values()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::point_values(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.IntervalSummary)
  return target;
}

size_t IntervalSummary::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.IntervalSummary)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string collector = 1;
  if (this->collector().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_collector());
  }

  switch (value_case()) {
    // .poplar.SummaryInteger number = 2;
    case kNumber: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.number_);
      break;
    }
    // .poplar.SummaryIntegerSlice number_values = 3;
    case kNumberValues: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.number_values_);
      break;
    }
    // .poplar.SummaryDouble point = 4;
    case kPoint: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.point_);
      break;
    }
    // .poplar.SummaryDoubleSlice point_values = 5;
    case kPointValues: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *value_.point_values_);
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void IntervalSummary::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:poplar.IntervalSummary)
  GOOGLE_DCHECK_NE(&from, this);
  const IntervalSummary* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<IntervalSummary>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:poplar.IntervalSummary)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:poplar.IntervalSummary)
    MergeFrom(*source);
  }
}

void IntervalSummary::MergeFrom(const IntervalSummary& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:poplar.IntervalSummary)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.collector().size() > 0) {

    collector_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.collector_);
  }
  switch (from.value_case()) {
    case kNumber: {
      _internal_mutable_number()->::poplar::SummaryInteger::MergeFrom(from._internal_number());
      break;
    }
    case kNumberValues: {
      _internal_mutable_number_values()->::poplar::SummaryIntegerSlice::MergeFrom(from._internal_number_values());
      break;
    }
    case kPoint: {
      _internal_mutable_point()->::poplar::SummaryDouble::MergeFrom(from._internal_point());
      break;
    }
    case kPointValues: {
      _internal_mutable_point_values()->::poplar::SummaryDoubleSlice::MergeFrom(from._internal_point_values());
      break;
    }
    case VALUE_NOT_SET: {
      break;
    }
  }
}

void IntervalSummary::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:poplar.IntervalSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void IntervalSummary::CopyFrom(const IntervalSummary& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.IntervalSummary)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntervalSummary::IsInitialized() const {
  return true;
}

void IntervalSummary::InternalSwap(IntervalSummary* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  collector_.Swap(&other->collector_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntervalSummary::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SummaryIntegerSlice::InitAsDefaultInstance() {
}
class SummaryIntegerSlice::_Internal {
 public:
};

SummaryIntegerSlice::SummaryIntegerSlice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:poplar.SummaryIntegerSlice)
}
SummaryIntegerSlice::SummaryIntegerSlice(const SummaryIntegerSlice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryIntegerSlice)
}

void SummaryIntegerSlice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SummaryIntegerSlice_metrics_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SummaryIntegerSlice::~SummaryIntegerSlice() {
  // @@protoc_insertion_point(destructor:poplar.SummaryIntegerSlice)
  SharedDtor();
}

void SummaryIntegerSlice::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SummaryIntegerSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SummaryIntegerSlice& SummaryIntegerSlice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SummaryIntegerSlice_metrics_2eproto.base);
  return *internal_default_instance();
}


void SummaryIntegerSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryIntegerSlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* SummaryIntegerSlice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "poplar.SummaryIntegerSlice.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt64Parser(_internal_mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16) {
          _internal_add_value(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SummaryIntegerSlice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryIntegerSlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryIntegerSlice.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated int64 value = 2;
  {
    int byte_size = _value_cached_byte_size_.load(std::memory_order_relaxed);
    if (byte_size > 0) {
      target = stream->WriteInt64Packed(
          2, _internal_value(), byte_size, target);
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryIntegerSlice)
  return target;
}

size_t SummaryIntegerSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryIntegerSlice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int64 value = 2;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int64Size(this->value_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _value_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryIntegerSlice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:poplar.SummaryIntegerSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryIntegerSlice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SummaryIntegerSlice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:poplar.SummaryIntegerSlice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:poplar.SummaryIntegerSlice)
    MergeFrom(*source);
  }
}

void SummaryIntegerSlice::MergeFrom(const SummaryIntegerSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryIntegerSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SummaryIntegerSlice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:poplar.SummaryIntegerSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryIntegerSlice::CopyFrom(const SummaryIntegerSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryIntegerSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryIntegerSlice::IsInitialized() const {
  return true;
}

void SummaryIntegerSlice::InternalSwap(SummaryIntegerSlice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryIntegerSlice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SummaryInteger::InitAsDefaultInstance() {
}
class SummaryInteger::_Internal {
 public:
};

SummaryInteger::SummaryInteger()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:poplar.SummaryInteger)
}
SummaryInteger::SummaryInteger(const SummaryInteger& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryInteger)
}

void SummaryInteger::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SummaryInteger_metrics_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = PROTOBUF_LONGLONG(0);
}

SummaryInteger::~SummaryInteger() {
  // @@protoc_insertion_point(destructor:poplar.SummaryInteger)
  SharedDtor();
}

void SummaryInteger::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SummaryInteger::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SummaryInteger& SummaryInteger::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SummaryInteger_metrics_2eproto.base);
  return *internal_default_instance();
}


void SummaryInteger::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryInteger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = PROTOBUF_LONGLONG(0);
  _internal_metadata_.Clear();
}

const char* SummaryInteger::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "poplar.SummaryInteger.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int64 value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SummaryInteger::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryInteger)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryInteger.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // int64 value = 2;
  if (this->value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt64ToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryInteger)
  return target;
}

size_t SummaryInteger::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryInteger)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // int64 value = 2;
  if (this->value() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int64Size(
        this->_internal_value());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryInteger::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:poplar.SummaryInteger)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryInteger* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SummaryInteger>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:poplar.SummaryInteger)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:poplar.SummaryInteger)
    MergeFrom(*source);
  }
}

void SummaryInteger::MergeFrom(const SummaryInteger& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryInteger)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.value() != 0) {
    _internal_set_value(from._internal_value());
  }
}

void SummaryInteger::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:poplar.SummaryInteger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryInteger::CopyFrom(const SummaryInteger& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryInteger)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryInteger::IsInitialized() const {
  return true;
}

void SummaryInteger::InternalSwap(SummaryInteger* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryInteger::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SummaryDoubleSlice::InitAsDefaultInstance() {
}
class SummaryDoubleSlice::_Internal {
 public:
};

SummaryDoubleSlice::SummaryDoubleSlice()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:poplar.SummaryDoubleSlice)
}
SummaryDoubleSlice::SummaryDoubleSlice(const SummaryDoubleSlice& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      value_(from.value_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryDoubleSlice)
}

void SummaryDoubleSlice::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SummaryDoubleSlice_metrics_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

SummaryDoubleSlice::~SummaryDoubleSlice() {
  // @@protoc_insertion_point(destructor:poplar.SummaryDoubleSlice)
  SharedDtor();
}

void SummaryDoubleSlice::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SummaryDoubleSlice::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SummaryDoubleSlice& SummaryDoubleSlice::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SummaryDoubleSlice_metrics_2eproto.base);
  return *internal_default_instance();
}


void SummaryDoubleSlice::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryDoubleSlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  value_.Clear();
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

const char* SummaryDoubleSlice::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "poplar.SummaryDoubleSlice.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated double value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedDoubleParser(_internal_mutable_value(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17) {
          _internal_add_value(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr));
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SummaryDoubleSlice::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryDoubleSlice)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryDoubleSlice.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // repeated double value = 2;
  if (this->_internal_value_size() > 0) {
    target = stream->WriteFixedPacked(2, _internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryDoubleSlice)
  return target;
}

size_t SummaryDoubleSlice::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryDoubleSlice)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated double value = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->_internal_value_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _value_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryDoubleSlice::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:poplar.SummaryDoubleSlice)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryDoubleSlice* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SummaryDoubleSlice>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:poplar.SummaryDoubleSlice)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:poplar.SummaryDoubleSlice)
    MergeFrom(*source);
  }
}

void SummaryDoubleSlice::MergeFrom(const SummaryDoubleSlice& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryDoubleSlice)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  value_.MergeFrom(from.value_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void SummaryDoubleSlice::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:poplar.SummaryDoubleSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryDoubleSlice::CopyFrom(const SummaryDoubleSlice& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryDoubleSlice)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryDoubleSlice::IsInitialized() const {
  return true;
}

void SummaryDoubleSlice::InternalSwap(SummaryDoubleSlice* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  value_.InternalSwap(&other->value_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryDoubleSlice::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void SummaryDouble::InitAsDefaultInstance() {
}
class SummaryDouble::_Internal {
 public:
};

SummaryDouble::SummaryDouble()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:poplar.SummaryDouble)
}
SummaryDouble::SummaryDouble(const SummaryDouble& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_name().empty()) {
    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  value_ = from.value_;
  // @@protoc_insertion_point(copy_constructor:poplar.SummaryDouble)
}

void SummaryDouble::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_SummaryDouble_metrics_2eproto.base);
  name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
}

SummaryDouble::~SummaryDouble() {
  // @@protoc_insertion_point(destructor:poplar.SummaryDouble)
  SharedDtor();
}

void SummaryDouble::SharedDtor() {
  name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void SummaryDouble::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const SummaryDouble& SummaryDouble::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_SummaryDouble_metrics_2eproto.base);
  return *internal_default_instance();
}


void SummaryDouble::Clear() {
// @@protoc_insertion_point(message_clear_start:poplar.SummaryDouble)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  value_ = 0;
  _internal_metadata_.Clear();
}

const char* SummaryDouble::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "poplar.SummaryDouble.name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double value = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          value_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* SummaryDouble::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:poplar.SummaryDouble)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "poplar.SummaryDouble.name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_name(), target);
  }

  // double value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:poplar.SummaryDouble)
  return target;
}

size_t SummaryDouble::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:poplar.SummaryDouble)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // double value = 2;
  if (!(this->value() <= 0 && this->value() >= 0)) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void SummaryDouble::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:poplar.SummaryDouble)
  GOOGLE_DCHECK_NE(&from, this);
  const SummaryDouble* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<SummaryDouble>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:poplar.SummaryDouble)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:poplar.SummaryDouble)
    MergeFrom(*source);
  }
}

void SummaryDouble::MergeFrom(const SummaryDouble& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:poplar.SummaryDouble)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (!(from.value() <= 0 && from.value() >= 0)) {
    _internal_set_value(from._internal_value());
  }
}

void SummaryDouble::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:poplar.SummaryDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SummaryDouble::CopyFrom(const SummaryDouble& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:poplar.SummaryDouble)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SummaryDouble::IsInitialized() const {
  return true;
}

void SummaryDouble::InternalSwap(SummaryDouble* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  name_.Swap(&other->name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(value_, other->value_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SummaryDouble::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace poplar
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::poplar::IntervalSummary* Arena::CreateMaybeMessage< ::poplar::IntervalSummary >(Arena* arena) {
  return Arena::CreateInternal< ::poplar::IntervalSummary >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryIntegerSlice* Arena::CreateMaybeMessage< ::poplar::SummaryIntegerSlice >(Arena* arena) {
  return Arena::CreateInternal< ::poplar::SummaryIntegerSlice >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryInteger* Arena::CreateMaybeMessage< ::poplar::SummaryInteger >(Arena* arena) {
  return Arena::CreateInternal< ::poplar::SummaryInteger >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryDoubleSlice* Arena::CreateMaybeMessage< ::poplar::SummaryDoubleSlice >(Arena* arena) {
  return Arena::CreateInternal< ::poplar::SummaryDoubleSlice >(arena);
}
template<> PROTOBUF_NOINLINE ::poplar::SummaryDouble* Arena::CreateMaybeMessage< ::poplar::SummaryDouble >(Arena* arena) {
  return Arena::CreateInternal< ::poplar::SummaryDouble >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
